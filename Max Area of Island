class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        m=len(grid)
        n=len(grid[0])
        
        visited=[[False for i in range(n)] for j in range(m)]
        for i in range(m):
            for j in range(n):
                if(grid[i][j]==1):
                    visited[i][j]=True
        
        self.maxArea=0
        def is_safe(x,y,visited):
            return (x>=0 and x<m and y>=0 and y<n and visited[x][y]==True)
        
        def bfs(visited,x,y):
            visited[x][y]=False
            q=[(x,y)]
            rows=[-1,1,0,0]
            cols=[0,0,-1,1]
            
            area=1
            while(q):
                x,y=q.pop(0)
                
                for i in range(4):
                    if(is_safe(x+rows[i],y+cols[i],visited)):
                        visited[x+rows[i]][y+cols[i]]=False
                        q.append((x+rows[i],y+cols[i]))
                        area+=1
                # print(area)
            
            if(area>self.maxArea):
                self.maxArea=area
            
        for i in range(m):
            for j in range(n):
                if(visited[i][j]==True):
                    # print(visited)
                    bfs(visited,i,j)
        
        return self.maxArea
        
